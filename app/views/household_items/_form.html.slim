-# Requires:
-# * moving
-# * household_item

/ This is a nested route.
= simple_form_for([moving, household_item], html: { class: 'form-horizontal' }) do |f|
  = f.input :name
  .row
    .col-xs-6
      = f.input :volume, input_html: { min: '0', step: 'any' }
    .col-xs-6
      = f.input :quantity, input_html: { min: '1', step: '1', value: '1' }
  
  a#toggle_calculator.text-muted[href="#"] 
    ' Toggle volume calculator #{fa_icon "caret-down"}
  = render "household_items/volume_calculator"
  
  = f.input :all_tags, placeholder: "Input tags separated by tags..."
  = f.input :description 
  .form-group
    = f.submit submit_text, class: 'btn btn-primary'

css:
  #toggle_calculator {
    display: block;
    margin-bottom: 1rem;
  }

javascript:
  // I use inline javascript because I want to enbed data into javascript at server side.
  // Also this script is only used for this particular HTML component.
  $(document).ready(function(){
  
    // Invoke the tesks.
    autocompleteNameAndVolume()
    autocompleteTags()
    setUpVolumeCalculator()
    
    //---
    //---
    
    function autocompleteNameAndVolume() {
      // Write the item-volume-json data directly on the HTML at server side.
      // The data is an object of key-value pairs (name: volume)
      var data = #{raw item_volume_json(@moving)} //<== Ruby
      var itemNames = Object.keys(data)
    
      // Configure the autocomplete.
      $('#household_item_name').autocomplete({
        source: itemNames,
        select: onSelect
      });
      
      // Invoked when an autocomplete list item is clicked.
      function onSelect(e, ui) {
        setVolume(data[ui.item.value])
      }
    }

    function autocompleteTags() {
      // Write the tag_names data directly on the HTML at server side.
      // The data is an array of strings.
      var tagNames = #{raw @moving.tags.map(&:name)} //<== Ruby

      // Configure the autocomplete.
      $('#household_item_all_tags').autocomplete({
        source: tagNames
      });
    }
    
    function setUpVolumeCalculator(){
      $('#toggle_calculator').on('click', function(event){
        $('#calculator').toggle()
        event.preventDefault()
        return false
      })
      
      $('#calculate').on('click', function(event){
      
        // Obtain references to all the fields.
        var $fields = [
          $('input[name="length"]'),
          $('input[name="width"]'),
          $('input[name="height"]')
        ]
        
        // Obtain values from all the fields.
        var $values = $fields.map(function(field){ 
          return Number(field.val()) 
        })
        
        // Calculate the volume if all the values are valid. Else make the result 0.
        var result = 0
        if ($values[0] && $values[1] && $values[2]) {
          result = $values[0] * $values[1] * $values[2] 
        }
        
        // Set the result to the volume field.
        setVolume(result)
      
        // Clear all the fields.
        for (var i = 0; i < 3; i++) {
          $fields[i].val("")
        }
        
        // Close the calculator.
        $('#calculator').hide()
        
        event.preventDefault()
        return false
      })
    }
    
    // Set the specified value on the volume field.
    function setVolume(volume){
      $('#household_item_volume').val(volume)
    }
  });
